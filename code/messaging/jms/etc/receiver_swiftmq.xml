<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 ! Excerpted from "Enterprise Recipes for Ruby and Rails",
 ! published by The Pragmatic Bookshelf.
 ! Copyrights apply to this code. It may not be used to create training material, 
 ! courses, books, articles, and the like. Contact us if you are in doubt.
 ! We make no guarantees that this code is fit for any purpose. 
 ! Visit http://www.pragmaticprogrammer.com/titles/msenr for more book information.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/lang
http://www.springframework.org/schema/lang/spring-lang-2.0.xsd">

  <bean id="messageReceiver" class="com.example.messaging.MessageReceiver"/>

  <bean id="jndiTemplate"
        class="org.springframework.jndi.JndiTemplate">
    <property name="environment">
      <props>
        <prop key="java.naming.factory.initial">com.swiftmq.jndi.InitialContextFactoryImpl</prop>
        <prop key="java.naming.provider.url">smqp://localhost:4001/timeout=10000</prop>
      </props>
    </property>
  </bean>

  <bean id="jmsConnectionFactory"
        class="org.springframework.jndi.JndiObjectFactoryBean"
        lazy-init="true">
    <property name="jndiTemplate">
      <ref bean="jndiTemplate"/>
    </property>
    <property name="jndiName">
      <value>plainsocket@router1</value>
    </property>
  </bean>

  <bean id="singleConnectionFactory"
        class="org.springframework.jms.connection.SingleConnectionFactory">
    <property name="targetConnectionFactory" ref="jmsConnectionFactory"/>
  </bean>

  <bean id="jmsTemplate"
        class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory">
      <ref bean="singleConnectionFactory"/>
    </property>
    <property name="defaultDestination">
      <ref bean="testqueue"/>
    </property>
  </bean>

  <bean id="testqueue"
        class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiTemplate">
      <ref bean="jndiTemplate"/>
    </property>
    <property name="jndiName">
      <value>testqueue@router1</value>
    </property>
  </bean>

<!--
  <bean id="initialContext" class="javax.naming.InitialContext">
    <constructor-arg>
      <props>                                       
        <prop key="java.naming.provider.url">
          smqp://localhost:4001/host2=localhost;port2=4001;reconnect=true
        </prop>
        <prop key="java.naming.factory.initial">
          com.swiftmq.jndi.InitialContextFactoryImpl
        </prop>
      </props>
    </constructor-arg>
  </bean>
	
  <bean id="connectionFactory"
        factory-bean="initialContext"
        factory-method="lookup">
    <constructor-arg value="ConnectionFactory"/>
  </bean>
-->
  <!--
  <bean id="connectionFactory"
        class="org.apache.activemq.ActiveMQConnectionFactory">
    <property name="brokerURL" value="tcp://localhost:61616" />
  </bean>
  -->
  
  <bean id="orderReceiver"
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    <!--<property name="connectionFactory"   ref="connectionFactory" />-->
    <property name="connectionFactory"   ref="singleConnectionFactory" />
    <property name="messageListener"     ref="messageReceiver" />
    <property name="destinationName"     value="testqueue@router1" />
    <property name="concurrentConsumers" value="5" />
    <property name="sessionTransacted"   value="false"/>
  </bean>

<!--
  <bean id="stompConnector"
        class="org.codehaus.stomp.jms.StompConnect"
        init-method="start">
    <property name="connectionFactory" ref="singleConnectionFactory" />
    <property name="uri"               value="tcp://localhost:62222"/>
  </bean>
-->
</beans>
